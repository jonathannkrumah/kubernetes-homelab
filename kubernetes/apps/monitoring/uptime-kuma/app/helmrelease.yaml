---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: uptime-kuma
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  install:
    createNamespace: true
  values:
    controllers:
      uptime-kuma:
        containers:
          app:
            env:
              TZ: "${TIMEZONE}"
            image:
              repository: louislam/uptime-kuma
              tag: 1.23.16@sha256:431fee3be822b04861cf0e35daf4beef6b7cb37391c5f26c3ad6e12ce280fe18
            ports:
              - name: http
                containerPort: 3001
                protocol: TCP
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
              limits:
                memory: 150Mi
    service:
      app:
        controller: uptime-kuma
        ports:
          http:
            port: 3001
            protocol: TCP
    ingress:
      app:
        enabled: true
        className: "internal"
        annotations:
          external-dns.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "eos-icons:monitoring"
          hajimari.io/group: Monitoring
          hajimari.io/appName: Uptime-Kuma
          external-dns.alpha.kubernetes.io/target: external.samcloud.online
        hosts:
          - host: &host "uptime-kuma.samcloud.online"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: uptime-kuma-tls

    persistence:
      data:
        enabled: true
        existingClaim: uptime-kuma-pvc
        globalMounts:
          - subPath: uptime-kuma
            path: /var/lib/uptime-kuma
    podSecurityContext:
      runAsUser: ${PUID}
      runAsGroup: ${PGID}
      fsGroup: ${PGID}
      fsGroupChangePolicy: "OnRootMismatch"
